// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Comb');
gettext('Const');
gettext('Varios');
gettext('Decodificadores');
gettext('Mux');
gettext('Puertas');
gettext('Tablas');
gettext('7Seg');
gettext('Catodo-comun');
gettext('displayBit');
gettext('DisplayBit. Decodificador de 1 bit a 7 segmentos. Cátodo común');
gettext('displayBit2');
gettext('DisplayBit2. Decodificador de 2 bits a 7 segmentos. Cátodo común');
gettext('displayBit3');
gettext('DisplayBit3. Decodificador de 3 bits a 7 segmentos. Cátodo común');
gettext('displayDEC');
gettext('DisplayDEC. Decodificador BCD a 7 segmentos. Cátodo común');
gettext('displayHEX');
gettext('DisplayHEX. Decodificador de binario a hexadecimal-7 segmentos. Cátodo común');
gettext('1-Bit');
gettext('2-Bits');
gettext('4-Bits');
gettext('7-Bit');
gettext('8-Bit');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1');
gettext('Mux-2-1');
gettext('Mux-4-1-flip');
gettext('Multiplexor de 4 a 1. Implementado en verilog');
gettext('Mux-4-1');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 2 bits');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 2 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 4 bits');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 4 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 7 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 8 bits');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 8 bits');
gettext('and');
gettext('Puerta AND');
gettext('and3');
gettext('Puerta AND de 3 entradas');
gettext('nand');
gettext('Puerta NAND');
gettext('nor');
gettext('Puerta NOR');
gettext('not');
gettext('Puerta NOT');
gettext('or');
gettext('Puerta OR');
gettext('xnor');
gettext('Puerta XNOR');
gettext('xor');
gettext('Puerta XOR');
gettext('tablas_bin');
gettext('tablas_hex');
gettext('1bit_entrada');
gettext('2bit_entrada');
gettext('3bit_entrada');
gettext('4bit_entrada');
gettext('5bit_entrada');
gettext('6bit_entrada');
gettext('7bit_entrada');
gettext('8bit_entrada');
gettext('tabla-bin-1-1');
gettext('Circuito combinacional de 1 entradas y 1 salidas');
gettext('tabla-bin-1-2');
gettext('Circuito combinacional de 1 entradas y 2 salidas');
gettext('tabla-bin-1-3');
gettext('Circuito combinacional de 1 entradas y 3 salidas');
gettext('tabla-bin-1-4');
gettext('Circuito combinacional de 1 entradas y 4 salidas');
gettext('tabla-bin-1-5');
gettext('Circuito combinacional de 1 entradas y 5 salidas');
gettext('tabla-bin-1-6');
gettext('Circuito combinacional de 1 entradas y 6 salidas');
gettext('tabla-bin-1-7');
gettext('Circuito combinacional de 1 entradas y 7 salidas');
gettext('tabla-bin-1-8');
gettext('Circuito combinacional de 1 entradas y 8 salidas');
gettext('tabla-bin-2-1');
gettext('Circuito combinacional de 2 entradas y 1 salidas');
gettext('tabla-bin-2-2');
gettext('Circuito combinacional de 2 entradas y 2 salidas');
gettext('tabla-bin-2-3');
gettext('Circuito combinacional de 2 entradas y 3 salidas');
gettext('tabla-bin-2-4');
gettext('Circuito combinacional de 2 entradas y 4 salidas');
gettext('tabla-bin-2-5');
gettext('Circuito combinacional de 2 entradas y 5 salidas');
gettext('tabla-bin-2-6');
gettext('Circuito combinacional de 2 entradas y 6 salidas');
gettext('tabla-bin-2-7');
gettext('Circuito combinacional de 2 entradas y 7 salidas');
gettext('tabla-bin-2-8');
gettext('Circuito combinacional de 2 entradas y 8 salidas');
gettext('tabla-bin-3-1');
gettext('Circuito combinacional de 3 entradas y 1 salidas');
gettext('tabla-bin-3-2');
gettext('Circuito combinacional de 3 entradas y 2 salidas');
gettext('tabla-bin-3-3');
gettext('Circuito combinacional de 3 entradas y 3 salidas');
gettext('tabla-bin-3-4');
gettext('Circuito combinacional de 3 entradas y 4 salidas');
gettext('tabla-bin-3-5');
gettext('Circuito combinacional de 3 entradas y 5 salidas');
gettext('tabla-bin-3-6');
gettext('Circuito combinacional de 3 entradas y 6 salidas');
gettext('tabla-bin-3-7');
gettext('Circuito combinacional de 3 entradas y 7 salidas');
gettext('tabla-bin-3-8');
gettext('Circuito combinacional de 3 entradas y 8 salidas');
gettext('tabla-bin-4-1');
gettext('Circuito combinacional de 4 entradas y 1 salidas');
gettext('tabla-bin-4-2');
gettext('Circuito combinacional de 4 entradas y 2 salidas');
gettext('tabla-bin-4-3');
gettext('Circuito combinacional de 4 entradas y 3 salidas');
gettext('tabla-bin-4-4');
gettext('Circuito combinacional de 4 entradas y 4 salidas');
gettext('tabla-bin-4-5');
gettext('Circuito combinacional de 4 entradas y 5 salidas');
gettext('tabla-bin-4-6');
gettext('Circuito combinacional de 4 entradas y 6 salidas');
gettext('tabla-bin-4-7');
gettext('Circuito combinacional de 4 entradas y 7 salidas');
gettext('tabla-bin-4-8');
gettext('Circuito combinacional de 4 entradas y 8 salidas');
gettext('tabla-bin-5-1');
gettext('Circuito combinacional de 5 entradas y 1 salidas');
gettext('tabla-bin-5-2');
gettext('Circuito combinacional de 5 entradas y 2 salidas');
gettext('tabla-bin-5-3');
gettext('Circuito combinacional de 5 entradas y 3 salidas');
gettext('tabla-bin-5-4');
gettext('Circuito combinacional de 5 entradas y 4 salidas');
gettext('tabla-bin-5-5');
gettext('Circuito combinacional de 5 entradas y 5 salidas');
gettext('tabla-bin-5-6');
gettext('Circuito combinacional de 5 entradas y 6 salidas');
gettext('tabla-bin-5-7');
gettext('Circuito combinacional de 5 entradas y 7 salidas');
gettext('tabla-bin-5-8');
gettext('Circuito combinacional de 5 entradas y 8 salidas');
gettext('tabla-bin-6-1');
gettext('Circuito combinacional de 6 entradas y 1 salidas');
gettext('tabla-bin-6-2');
gettext('Circuito combinacional de 6 entradas y 2 salidas');
gettext('tabla-bin-6-3');
gettext('Circuito combinacional de 6 entradas y 3 salidas');
gettext('tabla-bin-6-4');
gettext('Circuito combinacional de 6 entradas y 4 salidas');
gettext('tabla-bin-6-5');
gettext('Circuito combinacional de 6 entradas y 5 salidas');
gettext('tabla-bin-6-6');
gettext('Circuito combinacional de 6 entradas y 6 salidas');
gettext('tabla-bin-6-7');
gettext('Circuito combinacional de 6 entradas y 7 salidas');
gettext('tabla-bin-6-8');
gettext('Circuito combinacional de 6 entradas y 8 salidas');
gettext('tabla-bin-7-1');
gettext('Circuito combinacional de 7 entradas y 1 salidas');
gettext('tabla-bin-7-2');
gettext('Circuito combinacional de 7 entradas y 2 salidas');
gettext('tabla-bin-7-3');
gettext('Circuito combinacional de 7 entradas y 3 salidas');
gettext('tabla-bin-7-4');
gettext('Circuito combinacional de 7 entradas y 4 salidas');
gettext('tabla-bin-7-5');
gettext('Circuito combinacional de 7 entradas y 5 salidas');
gettext('tabla-bin-7-6');
gettext('Circuito combinacional de 7 entradas y 6 salidas');
gettext('tabla-bin-7-7');
gettext('Circuito combinacional de 7 entradas y 7 salidas');
gettext('tabla-bin-7-8');
gettext('Circuito combinacional de 7 entradas y 8 salidas');
gettext('tabla-bin-8-1');
gettext('Circuito combinacional de 8 entradas y 1 salidas');
gettext('tabla-bin-8-2');
gettext('Circuito combinacional de 8 entradas y 2 salidas');
gettext('tabla-bin-8-3');
gettext('Circuito combinacional de 8 entradas y 3 salidas');
gettext('tabla-bin-8-4');
gettext('Circuito combinacional de 8 entradas y 4 salidas');
gettext('tabla-bin-8-5');
gettext('Circuito combinacional de 8 entradas y 5 salidas');
gettext('tabla-bin-8-6');
gettext('Circuito combinacional de 8 entradas y 6 salidas');
gettext('tabla-bin-8-7');
gettext('Circuito combinacional de 8 entradas y 7 salidas');
gettext('tabla-bin-8-8');
gettext('Circuito combinacional de 8 entradas y 8 salidas');
gettext('1bit_entrada');
gettext('2bit_entrada');
gettext('3bit_entrada');
gettext('4bit_entrada');
gettext('5bit_entrada');
gettext('6bit_entrada');
gettext('7bit_entrada');
gettext('8bit_entrada');
gettext('tabla-hex-1-1');
gettext('tabla-hex-1-2');
gettext('tabla-hex-1-3');
gettext('tabla-hex-1-4');
gettext('tabla-hex-1-5');
gettext('tabla-hex-1-6');
gettext('tabla-hex-1-7');
gettext('tabla-hex-1-8');
gettext('tabla-hex-2-1');
gettext('tabla-hex-2-2');
gettext('tabla-hex-2-3');
gettext('tabla-hex-2-4');
gettext('tabla-hex-2-5');
gettext('tabla-hex-2-6');
gettext('tabla-hex-2-7');
gettext('tabla-hex-2-8');
gettext('tabla-hex-3-1');
gettext('tabla-hex-3-2');
gettext('tabla-hex-3-3');
gettext('tabla-hex-3-4');
gettext('tabla-hex-3-5');
gettext('tabla-hex-3-6');
gettext('tabla-hex-3-7');
gettext('tabla-hex-3-8');
gettext('tabla-hex-4-1');
gettext('tabla-hex-4-2');
gettext('tabla-hex-4-3');
gettext('tabla-hex-4-4');
gettext('tabla-hex-4-5');
gettext('tabla-hex-4-6');
gettext('tabla-hex-4-7');
gettext('tabla-hex-4-8');
gettext('tabla-hex-5-1');
gettext('tabla-hex-5-2');
gettext('tabla-hex-5-3');
gettext('tabla-hex-5-4');
gettext('tabla-hex-5-5');
gettext('tabla-hex-5-6');
gettext('tabla-hex-5-7');
gettext('tabla-hex-5-8');
gettext('tabla-hex-6-1');
gettext('tabla-hex-6-2');
gettext('tabla-hex-6-3');
gettext('tabla-hex-6-4');
gettext('tabla-hex-6-5');
gettext('tabla-hex-6-6');
gettext('tabla-hex-6-7');
gettext('tabla-hex-6-8');
gettext('tabla-hex-7-1');
gettext('tabla-hex-7-2');
gettext('tabla-hex-7-3');
gettext('tabla-hex-7-4');
gettext('tabla-hex-7-5');
gettext('tabla-hex-7-6');
gettext('tabla-hex-7-7');
gettext('tabla-hex-7-8');
gettext('tabla-hex-8-1');
gettext('tabla-hex-8-2');
gettext('tabla-hex-8-3');
gettext('tabla-hex-8-4');
gettext('tabla-hex-8-5');
gettext('tabla-hex-8-6');
gettext('tabla-hex-8-7');
gettext('tabla-hex-8-8');
gettext('7Seg');
gettext('Bits');
gettext('Bus');
gettext('Digitos');
gettext('Letras');
gettext('0');
gettext('Constante de  7 bits para mostrar el dígito 0 en un display de 7 segmentos');
gettext('Valor genérico constante, de 7 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 1 | 1 | 0 |');
gettext('1');
gettext('Constante de  7 bits para mostrar el dígito 1 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 0 | 0 | 0 | 0 |');
gettext('2');
gettext('Constante de  7 bits para mostrar el dígito 2 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  0| 1 | 1 | 0 | 1 |');
gettext('3');
gettext('Constante de  7 bits para mostrar el dígito 3 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 0 | 0 | 1 |');
gettext('4');
gettext('Constante de  7 bits para mostrar el dígito 4 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 0 | 0 | 1 | 1 |');
gettext('5');
gettext('Constante de  7 bits para mostrar el dígito 5 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  1| 1 | 0 | 1 | 1 |');
gettext('6');
gettext('Constante de  7 bits para mostrar el dígito 6 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  1| 1 | 1 | 1 | 1 |');
gettext('7');
gettext('Constante de  7 bits para mostrar el dígito 7 en un display de 7 segmentos');
gettext('8');
gettext('Constante de  7 bits para mostrar el dígito 8 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 1 | 1 | 1 |');
gettext('9');
gettext('Constante de  7 bits para mostrar el dígito 9 en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 1 | 0 | 1 | 1 |');
gettext('A');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal A en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 |  1| 0 | 1 | 1 | 1 |');
gettext('B');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal B en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 |  1| 1 | 1 | 1 | 1 |');
gettext('C');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal C en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 1 | 1 | 1 | 0 |');
gettext('D');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal D en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 |  1| 1 | 1 | 0 | 1 |');
gettext('E');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal E en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 1 | 1 | 1 | 1 |');
gettext('F');
gettext('Constante de  7 bits para mostrar el dígito hexadecimal F en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 0 |  0| 0 | 1 | 1 | 1 |');
gettext('G');
gettext('Constante de  7 bits para mostrar la letral G en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|1  | 1 | 1 | 1 | 0 | 1 | 1 |');
gettext('H');
gettext('Constante de  7 bits para mostrar la letra H en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 1 | 1 | 0 | 1 | 1 | 1 |');
gettext('I');
gettext('Constante de  7 bits para mostrar la letra I en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n|0  | 0 | 0 | 0 | 1 | 1 | 0 |');
gettext('J');
gettext('Constante de  7 bits para mostrar la letra J en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 1 | 1 | 1 | 0 | 0 |');
gettext('L');
gettext('Constante de  7 bits para mostrar la letra L en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 1 | 1 | 1 | 0 |');
gettext('N');
gettext('Constante de  7 bits para mostrar la letra N en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 1 | 0 | 1 | 0 | 1 |');
gettext('NN');
gettext('Constante de  7 bits para mostrar la letra ñ en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 1 | 0 | 1 | 0 | 1 |');
gettext('O');
gettext('Constante de  7 bits para mostrar la letra O en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 1 | 1 | 1 | 0 |');
gettext('P');
gettext('Constante de  7 bits para mostrar la letra P en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 0 | 0 | 1 | 1 | 1 |');
gettext('Q');
gettext('Constante de  7 bits para mostrar la letra Q en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 1 | 1 | 0 | 0 | 1 | 1 |');
gettext('R');
gettext('Constante de  7 bits para mostrar la letra R en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 0 | 0 | 0 | 1 | 0 | 1 |');
gettext('S');
gettext('Constante de  7 bits para mostrar la letra S en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 1 | 0 | 1 | 1 | 0 | 1 | 1 |');
gettext('U');
gettext('Constante de  7 bits para mostrar la letra U en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 1 | 1 | 1 | 1 | 0 |');
gettext('Y');
gettext('Constante de  7 bits para mostrar la letra Y en un display de 7 segmentos');
gettext('**Segmentos**\n\n| a | b | c | d | e | f | g |\n|---|---|---|---|---|---|---|\n| 0 | 1 | 1 | 1 | 0 | 1 | 1 |');
gettext('0');
gettext('Un bit constante a 0');
gettext('1');
gettext('Un bit constante a 1');
gettext('01_bits');
gettext('02_bits');
gettext('04_bits');
gettext('07_bits');
gettext('08_bits');
gettext('Generico');
gettext('Valor genérico constante, de 1 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Generico');
gettext('Valor genérico constante, de 2 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_0');
gettext('Valor constante 0 para bus de 2 bits');
gettext('Valor_1');
gettext('Valor constante 1 para bus de 2 bits');
gettext('Valor_2');
gettext('Valor constante 2 para bus de 2 bits');
gettext('Valor_3');
gettext('Valor constante 3 para bus de 2 bits');
gettext('Generico');
gettext('Valor genérico constante, de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_00');
gettext('Valor constante 0 para bus de 4 bits');
gettext('Valor_05');
gettext('Valor constante 5 para bus de 4 bits');
gettext('Valor_10');
gettext('Valor constante 10 para bus de 4 bits');
gettext('Valor_15');
gettext('Valor constante 15 para bus de 4 bits');
gettext('Generico');
gettext('Generico');
gettext('Valor genérico constante, de 8 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_000');
gettext('Valor constante 0 para bus de 8 bits');
gettext('Valor_085');
gettext('Valor constante 85 (55h) para bus de 8 bits');
gettext('Valor_170');
gettext('Valor constante 170 (AAh) para bus de 8 bits');
gettext('Valor_255');
gettext('Valor constante 255 para bus de 8 bits');
gettext('Accesorios');
gettext('Biestables');
gettext('Bombeo');
gettext('Bus');
gettext('Motor');
gettext('Pegatinas');
gettext('Recreo');
gettext('Retardo');
gettext('Servos');
gettext('icebot');
gettext('Test');
gettext('Reto 1: ¡Cárgame en la placa y pruébame! :-)');
gettext('Contador ascendente de 4bits, con entrada de cuenta');
gettext('Registro de 4 bits con entrada de load');
gettext('Agregador de 2 buses (2+2)  a bus de 4bits');
gettext('Separador de bus de 4bits en 2 (2 + 2)');
gettext('Registro de 2 bits, con entrada de load');
gettext('Separador de bus de 2bits');
gettext('Agregador de 2 cables a bus de 2bits');
gettext('Biestable D con enable inicializado a 0');
gettext('Biestable tipo D con entrada de enable, inicializado al parámetro INI');
gettext('Biestable D con inicialización paramétrica');
gettext('Multiplexor 2:1 de 1-bit');
gettext('NAND logic gate');
gettext('Transistor');
gettext('Transistor cmos hecho a partir de semiconductores');
gettext('Cristal de Siicio');
gettext('Atomos de silicio');
gettext('Incrementar en 1 el dato de 4 bits');
gettext('Sumador de 4 bits con acarreo de salida');
gettext('Sumador de 4 bits con acarreo de salida y de entrada');
gettext('Sumador de 2 bits con acarreo de salida y de entrada');
gettext('Sumador de 1bit, con arraceo de entrada y salida');
gettext('Semisumador. 2 bits de entrada, saca la suma (S) y el acarreo (C)');
gettext('XOR logic gate');
gettext('Valor constante 1 para bus de 4 bits');
gettext('Valor constante de 4 bits');
gettext('Corazon genérico para bombear bits a la frecuencia fijada en Hz (por defecto 1Hz)');
gettext('Generar un pulso de reloj al recibir un flanco por la entrada');
gettext('Biestable D inicializado a 0');
gettext('Delay flip-flop');
gettext('Mux 2:1 with logic gates');
gettext('Entrada 1');
gettext('Entrada 0');
gettext('Selección');
gettext('Implementación en Verilog');
gettext('Las puertas están construidas a\npartir de transistores');
gettext('Pincha en algún transistor para\nbajar de nivel');
gettext('Nivel 3: Semiconductores');
gettext('Los transistores se crean a \npartir de uniones entre \nsemiconductores, de tipo P y N\nEstán integrados en los dados de\nsilicio en los circuitos integrados');
gettext('Pincha en el bloque para bajar de nivel');
gettext('Nivel 2: MATERIALES');
gettext('Cristal de silicio');
gettext('Los semiconductores se crean a partir de cristales\nde Silicio (Si) que se dopans con impurezas\npara darle las propiedades de semiconductores');
gettext('Pincha en los bloques para bajar de nivel');
gettext('Átomos de Silicio');
gettext('Nivel 1: ATOMOS');
gettext('Los cristales de silicio se forman a \npartir del enlace covalente entre los\nátomos de silicio. Cada uno de ellos \nestá rodeado por 4 átomos de silicio\nformando un tetraedro');
gettext('Baliza-1');
gettext('Baliza luminosa de 1 led. Parpadea a 2Hz cuando se activa');
gettext('Bombear 2 bits por segundo');
gettext('**Baliza luminosa**\n\nParpadeo del LED a 2Hz');
gettext('Creado a partir de un **corazón  \ngenérico**, dando el valor adecuado  \na su parámetro frecuencia');
gettext('Baliza-2');
gettext('Baliza luminosa de 2 leds. Parpadean alternativamente a 2Hz cuando se activa');
gettext('**Baliza luminosa**\n\nParpadeo de los LEDs alternativamente a 2Hz, cuando están habilitados ');
gettext('Sirena');
gettext('Cuando se activa su entrada (por nivel) suena la sirena');
gettext('Bombear 1000 bits por segundo');
gettext('Bombear 4 bits por segundo');
gettext('Bombear 2000 bits por segundo');
gettext('**Sirena acústica**\n\nSe alternan pitidos de 1Khz y 2Khz a la frecuencia de 4Hz');
gettext('Cuando esta señal se pone a 1  \nempieza a sonar la sirena');
gettext('Conectar la salida  \ndirectamente a un  \nzumbador');
gettext('Set-Reset');
gettext('Biestable con entradas de Set y Reset síncronas, para poner y quitar notaficaciones de eventos');
gettext('Fijos');
gettext('Corazon_Hz');
gettext('Corazon_Seg');
gettext('Bombear 1 bit con el periodo especificado en el parámetro. Por defecto el periodo es de 1 segundos');
gettext('Corazon_10Hz');
gettext('Bombear 10 bits por segundo');
gettext('Corazon_1Hz');
gettext('Bombear 1 bit por segundo');
gettext('Corazon_1KHz');
gettext('Corazon_2Hz');
gettext('Corazon_2KHz');
gettext('Corazon_3Hz');
gettext('Bombear 3 bits por segundo');
gettext('Corazon_4Hz');
gettext('Corazon_5Hz');
gettext('Bombear 5 bits por segundo');
gettext('Corazon_7Hz');
gettext('Bombear 7 bits por segundo');
gettext('Corazon_DO4');
gettext('Bombear bits a la frecuencia del DO de la cuarta octava');
gettext('Corazon_MI4');
gettext('Bombear bits a la frecuencia del MI de la cuarta octava');
gettext('Corazon_RE4');
gettext('Bombear bits a la frecuencia del RE de la cuarta octava');
gettext('02_bits');
gettext('04_bits');
gettext('08_bits');
gettext('Agregador');
gettext('Agregador de 2 cables en un bus de 2-bits');
gettext('Separador');
gettext('Separador de bus de 2-bits en dos cables');
gettext('Agregador');
gettext('Agregador de buses de 2-bits a bus de 4-bits');
gettext('Separador');
gettext('Separador de bus de 4-bits en buses de 2 bits');
gettext('Separador4');
gettext('Separador de bus de 4-bits en 4 cables');
gettext('Agregador');
gettext('Agregador de 2 buses de 4-bits a bus de 8-bits');
gettext('Separador');
gettext('Separador de bus de 8-bits en buses de 4 bits');
gettext('SM-S4303R');
gettext('MotorBit');
gettext('Controlador para servo de rotacion continua SprintRC SM-S4303R. Con on=1, el motor avanza. Dir=1 sentido agujas reloj/ 0 el contrario. V1 y V2 son los pulsos para las velocidades horaria y antihoraria (en micro-sec). V0 para que esté parado');
gettext('Mux 2:1. Bus de 7 bits. ');
gettext('Mux 2:1. Bus de 4 bits. ');
gettext('Agregador de 4 cables a bus de 4bits');
gettext('Separador de bus de 4bits en 4 cables (1 + 1 + 1 + 1)');
gettext('Separador de bus de 8bits en 2 (4 + 4)');
gettext('Agregador de 2 buses de 4 a bus de 8bits');
gettext('Controlador PWM para posicionar servos de 20ms. Las unidades de pos son de 10usec');
gettext('**Velocidad 1**: Velocidad para el  \nsentido de giro horario\n');
gettext('**Velocidad 2**: Velocidad para el \nsentido de giro antirhorario');
gettext('**Entrada on/off**: Motor en  \nmovimiento o parado');
gettext('**Motorbit paramétrico** para los **SM-S4303R** o compatibles\n\nTiene 3 parámetros, especificados en micro-segundos. **V1** y **V2** son las posiciones (ancho del pulso)  \npara las velocidades de giro en sentido horario y antihorario respectivamente\n\n**V0** es la posición en la que el servo está parado (velocidad 0)\n\nPor defecto se asignan los valores para las velocidades máximas, tanto en sentido horario como antihorario\n\n* V1max = 1900\n* V2max = 1100\n* V0 = 1500');
gettext('**Velocidad en sentido horario**\n\n* Si V1 >= 1900, la velocidad es máxima\n* Si 1900 > V1 > 1500, la velocidad estará  \nentre la máxima y 0');
gettext('**Velocidad en sentido antihorario**\n\n* Si V2 <= 1100, la velocidad es máxima\n* Si 1100 < V2 < 1500, la velocidad estará  \nentre la máxima y 0');
gettext('**dir**: Sentido de giro  \n1: horario / 0: antihorario');
gettext('**Velocidad 0**: Posición para que  \nel servo esté parado');
gettext('<B>Posicion del servo</B>\n\nSe especifica en unidades de 10micro-segundos\nEj. pos = 100 --> Pulso de achura 1ms');
gettext('<B>Generación de una señal PWM para posicionamiento de Servos</B>\nEl periodo es de 20ms\nEl ancho del pulso varía entre 0 - 255 (0 - 2.5ms)');
gettext('Academia-Jedi');
gettext('Emojis');
gettext('Rusia-2018');
gettext('00-Pre');
gettext('01-Primero');
gettext('02-Segundo');
gettext('00-Observador');
gettext('Rango de Observador. Pre-academia Jedi');
gettext('01-Aspirante-a-Cadete');
gettext('Rango de Aspirante a Cadete. Pre-academia Jedi');
gettext('02-Cadete');
gettext('Rango de Cadete. Primer curso');
gettext('03-Cadete-N1');
gettext('Rango de Cadete Nivel 1. Primer curso');
gettext('04-Cadete-N2');
gettext('Rango de Cadete Nivel 2. Primer curso');
gettext('05-Cadete-N3');
gettext('Rango de Cadete Nivel 3. Primer curso');
gettext('06-Aspirante-Padawan');
gettext('Rango de Aspirante a Padawan. Primer curso');
gettext('07-Aspirante-Padawan-N1');
gettext('Rango de Aspirante a Padawan Nivel 1. Primer curso');
gettext('08-Aspirante-Padawan-N2');
gettext('Rango de Aspirante a Padawan Nivel 2. Primer curso');
gettext('09-Aspirante-Padawan-N3');
gettext('Rango de Aspirante a Padawan Nivel 3. Primer curso');
gettext('10-Padawan');
gettext('Rango de Padawan. Segundo curso');
gettext('11-Padawan-N1');
gettext('Rango de Padawan Nivel 1. Segundo curso');
gettext('12-Padawan-N2');
gettext('Rango de Padawan Nivel 2. Segundo curso');
gettext('13-Padawan-N3');
gettext('Rango de Padawan Nivel 3. Segundo curso');
gettext('14-Aspirante-Jedi');
gettext('Rango de Aspirante a Jedi. Segundo curso');
gettext('15-Aspirante-Jedi-N1');
gettext('Rango de Aspirante a Jedi Nivel 1. Segundo curso');
gettext('16-Aspirante-Jedi-N2');
gettext('Rango de Aspirante a Jedi Nivel 2. Segundo curso');
gettext('17-Aspirante-Jedi-N3');
gettext('Rango de Aspirante a Jedi Nivel 3. Segundo curso');
gettext('Smiley');
gettext('Stickers de Smiley');
gettext('caca');
gettext('Caca sonriente');
gettext('like');
gettext('Like');
gettext('Rusia-2018-Balon');
gettext('Balón del Mundial de Rusia 2018');
gettext('Rusia-2018-equipos');
gettext('Equipos participanetes en el Mundial de Rusia 2018');
gettext('Rusia-2018-logo-1');
gettext('Mundial de Rusia 2018');
gettext('Rusia-2018-logo-2');
gettext('Rusia-2018-spain-1');
gettext('La roja en el Mundial de Rusia 2018');
gettext('Rusia-2018-spain-2');
gettext('Escudo de la selección Española');
gettext('Rusia-2018-spain-3');
gettext('Camiseta de la selección Española');
gettext('comecocos');
gettext('Bloque de prueba para explicar conceptos. No hace nada');
gettext('Bloque de documentación, para explicar los  \nconceptos de puertos, parámeros, pines, cables  \ny buses en el tutorial 21');
gettext('Tortuga-2');
gettext('Divisor entre dos');
gettext('Biestable T síncrono, inicializado a 0');
gettext('Biestable T síncrono, inicializado por parametro INI');
gettext('Tortuga: Divisor entre 2\n\nImplementado a partir de un\nbiestable T síncrono');
gettext('Hacer que solo responda a los flancos\nde subida de la señal de entrada');
gettext('Emax-ES08A');
gettext('Futaba-3003');
gettext('TowerPro-SG90');
gettext('ServoBit-90');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a las 2 posiciones POS0 y POS1');
gettext('**Posición 1**: Posición del servo cuando  \nse introduce un 1\n\nEl valor por defecto es de 135 grados\n');
gettext('**Posición 0**: Posición del servo cuando  \nse introduce un 0\n\nEl valor por defecto es de 45 grados');
gettext('**Entrada**: posición a donde llevar  \nel servo (posición 0 ó 1)');
gettext('**Servobit paramétrico** para los microservos **EMAX-ES08A** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **580 usec**  \n* Extremo izquierdo **2550 usec**\n');
gettext('ServoBit');
gettext('Servobit-90');
gettext('ServoBit para Futaba 3003. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('ServoBit paramétrico para Futaba 3003. Controlador de 1 bit para mover el servo a las 2 posiciones P0 y P1');
gettext('**Servobit** para Servos Futaba 3003 o comaptibles\nLas dos posiciones están distanciadas **90 grados**  \n\n* **Posicion 0**: 45 grados  \n* **Posicion 1**: 135 grados  ');
gettext('**Servobit paramétrico** para los microservos **Futaba 3003** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **380 usec**  \n* Extremo izquierdo **2410 usec**\n');
gettext('Servobit');
gettext('Servobit-90');
gettext('ServoBit para micrservo TowerPro-SG90. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('**Servobit paramétrico** para los microservos **TowerPro SG-90** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **500 usec**  \n* Extremo izquierdo **2350 usec**\n');
gettext('Servobit');
gettext('Icemove4');
gettext('Icemove4: Controlador de 4 movimientos para el Icebot');
gettext('# ICEmove4\n\nControlador para el [robot Icebot](https://github.com/Obijuan/icebot/wiki), que genera **4 movimientos**:  \nParado, giro derecha (arco), giro izquierda (arco) y adelante');
gettext('**Código del movimiento**');
gettext('**Motor de la rueda derecha**');
gettext('**Motor de la rueda izquierda**');
gettext('## Tabla de movimientos\n\n| Código de entrada | Movimiento del Robot   |\n|-------------------|------------------------|\n|  0                |  Parado                |\n|  1                |  Giro derecha (arco)   |\n|  2                |  Giro izquierda (arco) |\n|  3                |  Adelante              |');
gettext('**Entrada de reloj**');
gettext('Icemove9');
gettext('Icemove9: Controlador de 9 movimientos para el Icebot');
gettext('# ICEmove9\n\nControlador de 9 movimientos para el robot Icebot  \n(Entrada de 4 bits)');
gettext('## Tabla de movimientos\n\n| Código de entrada | Movimiento del Robot   |\n|-------------------|------------------------|\n|  0, 1, 2, 3       |  Parado                |\n|  4,6              |  Arco derecha          |\n|  5,7              |  Arco izquierda-atrás  |\n|  8,9              |  Arco derecha-atrás    |\n|  10,11            |  Arco izquierda        |\n|  12               |  Giro derecha          |\n|  13               |  Atrás                 |\n|  14               |  Adelante              |\n|  15               |  Giro izquierda        |');
gettext('0-Soluciones-Tutorial-24');
gettext('1-Ejemplos');
gettext('2-Ejercicios');
gettext('Test');
gettext('Sol-24-1');
gettext('**Solución ejercicio 24.1:** (5 Bitpoints). Conexión del 7 segmentos\n\nConectar un display de 7 segmentos a los pines GP0 - GP7 de la Icezum Alhambra  \nEnviar la constate \"8\" del display para que se enciendan todos los segmentos y  \ncomprobar que las conexiones están bien (lamp test). Activar también el punto');
gettext('Encender todos los segmentos');
gettext('Encender el punto');
gettext('Sol-24-2');
gettext('**Solución ejercicio 24.2:** (5 Bitpoints). Mostrar el estado de dos sensores IR\n\nHacer un circuito digital para mostrar en un display de 7 segmentos el estado de    \n**dos sensores IR**. Se utilizará un **interruptor externo** para seleccionar qué sensor  \nes el que se visualiza en el display. Para cada sensor IR se visualizá su estado  \nmostrando los **dígitos 0** ó **1**\n');
gettext('Interruptor de selección de  \nsensor IR');
gettext('**DisplayBit**');
gettext('Sol-24-3-bloque');
gettext('Componente del ejercicio 24.3');
gettext('**Solución al ejercicio 24.3**\n\n');
gettext('Sol-24-3');
gettext('**Solución ejercicio 24.3:** (10 Bitpoints). Decodificador decimal con caracteres extra\n\nHacer un bloque **decodificador** decimal a siete segmentos que tenga **6 caracteres extra**  \ncorrespondiente a los números del **10** al **15**. Los nuevos caracteres son los  \nsiguientes:  \n\n* **Carácter 10**: Ningún segmento activado\n* **Carácter 11**: segmento d activado\n* **Carácter 12**: segmentos d y g activados\n* **Carácter 13**: segmentos a,d y g activados\n* **Carácter 14**: segmentos a,b, f y g activados\n* **Carácter 15**: segmentos c,d,e y g activados\n\nMeter este decodificador en un bloque llamado **DisplayEXTRA**. Utilizar  \neste icono: [7Seg-Extra.svg](https://github.com/FPGAwars/icestudio-block-icons/raw/master/7Seg/7Seg-Extra.svg)\n\nComo **circuito de pruebas** conectar **4 interruptores externos** para seleccionar  \nel carácter a visualizar en el display');
gettext('![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/raw/master/wiki/Tutorial-24/ejercicio3.png)');
gettext('**DisplayEXTRA**');
gettext('01-pulsador-led');
gettext('## Ejemplo 1: Encender un LED con pulsador, sin biestable');
gettext('02-Notificacion-pulsador-LED');
gettext('## Ejemplo 2: Notificación de botón apretado\n\nEl **LED** nos indica si el **pulsador** ha sido apretado  \nCon un segundo pulsador **borramos** la notificación  ');
gettext('Evento de botón  \napretado');
gettext('Botón para borrado de  \nla notificación');
gettext('Notificación pendiente');
gettext('**Botón apretado**');
gettext('03-IR-led');
gettext('## Ejemplo 3: Mostrar el sensor IR en un LED, sin biestable\n\nCircuito combinacional que muestra el estado del **Sensor IR** en el **LED**  \nEs el mismo circuito que el ejemplo 1, pero conectando un sensor IR  \nen vez del pulsador externo');
gettext('04-Notificacion-IR-LED');
gettext('## Ejemplo 4: Notificación de presencia\n\nEn cuanto el **sensor IR** detecta la presencia de un objeto, se emite un evento  \nque es almacenado por el **bistable**, y lo **notifica** encendiendo el **LED**  \nPara volver a **rearmar** el sistema se usa un **pulsador externo**');
gettext('**Rearme del detector**');
gettext('**Sensor de infrarrojos**');
gettext('**Objeto detectado**');
gettext('**Notificación de  \nobjeto detectado**');
gettext('05-Barrera-automatica');
gettext('## Ejemplo 5: Barrera automática\n\nControlador de barrera automática. Cuando llega un vehículo la barrera se sube  \nSe vuelve a cerrar una vez que ha entrado dentro del recinto');
gettext('**Estado de la barrera**');
gettext('**Servo de la barrera**');
gettext('Evento  \n*Ha llegado vehículo*');
gettext('Evento  \n*Vehículo dentro*');
gettext('06-Caja-fuerte-codigo');
gettext('## Ejemplo 6: Caja fuerte con apertura con código\n\nLa caja fuerte se abre cuando se introduce por los interruptores el código correcto,  \nque es 1010, y se aprita el pulsador de abrir. Para cerrar hay que apretar el botón  \nde cerrar. El código introducido se muestra por los LEDs de la Icezum Alhambra  \nHay además un LED verde que se enciende al abrirse la caja, y uno rojo que se enciende  \ncuando está cerrada');
gettext('**Estado puerta**\n');
gettext('0: Cerrada  \n1: Abierta');
gettext('Servo de apertura de la puerta\n');
gettext('**LER Verde**  \nPuerta abierta');
gettext('**LER Rojo**  \nPuerta cerrada');
gettext('**Abrir**\n');
gettext('Código correcto');
gettext('**Cerrar**\n');
gettext('Evento de  \napertura');
gettext('**Interruptores**');
gettext('Introducción del código');
gettext('Mostrar el código  \nen los LEDs');
gettext('07-Alarma-antirrobo');
gettext('**Activar alarma**');
gettext('**Desactivar alarma**');
gettext('**Detector de presencia**');
gettext('**LED VERDE**');
gettext('**Alarma activada**');
gettext('**LED ROJO**');
gettext('**Sirena acústica**\n');
gettext('**Alarma disparada**\n');
gettext('**Baliza luminosa**\n');
gettext('0: Alarma NO disparada  \n1: Alarma disparada  ');
gettext('Evento: Objeto sustraido');
gettext('Evento: Alarma activada');
gettext('La alarma se dispara  \nsi está activada y el    \nobjeto se mueve de su  \nposición');
gettext('**Circuito de control del LED verde**:  \nCuando la alarma NO está activada se indica en el LED la presencia  \no no del objeto a proteger  \nSi está activada se hace parpadear el LED una vez por segundo');
gettext('0: Alarma NO activada  \n1: Alarma activada');
gettext('La alarma se activa  \nsi está colocado el  \nobjeto a proteger y  \nse aprieta el botón  \nde ACTIVAR');
gettext('Ejercicio-21-x');
gettext('**Ejercicio 16.1**: (5 Bitpoints). **Alarma por infrarrojos**\n\nDiseñar un **circuito digital** que haga sonar una alarma mientras el **sensor de \ninfrarrojos** esté detectando un objeto. La alarma sonará por un **zumbador**, y estará  \ncompuesta por **dos tonos** de **1Khz** y **2Khz**, alternados a la frecuencia de **2Hz**\n\nCuando el sensor no detecta objetos, la alarma estará callada\n\n');
gettext('**Entregar**:\n\n  -1 Pantallazo del circuito (2 Bitpoints)\n  \n  -1 Vídeo del funcionamiento (2 Bitpoints)\n  \n  Enviarlos por redes sociales (Twitter, G+) con mención \n  a @Obijuan_cube. El vídeo puede estar en youtube o directamente en el tuit/post\n  ');
gettext('**GITHUB**:\n\n  1 Bitpoint adicional si lo entregáis por Github (sólo pantallazo, el vídeo\n  no hace falta, para que no ocupe tanto espacio)');
gettext('Ejercicio-25-1');
gettext('**GITHUB**:\n\n  Entrega obligatoria por Github (sólo pantallazo, el vídeo\n  no hace falta, para que no ocupe tanto espacio)');
gettext('**Ejercicio 25.1:** (5 Bitpoints). Captando la atención de Franky\n\nColocar dos sensores de infrarrojos. Franky se quedará mirando siempre al último que se haya  \nactivado. Si se detecta algo por la derecha, girará su cuello hacia la derecha  \ny permanecerá en esa posición. Si detecta algo por la izquierda, girará el cuello a la  \nizquierda y permancerá en esa posición. Colocar también dos LEDs, uno a la derecha y otro  \na la izquierda. Según en la posición en la que esté mirando Franky, se iluminará uno u otro');
gettext('El funcionamiento se muestra en esta **animación**');
gettext('![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/raw/master/wiki/Tutorial-25/ejercicio-1.gif)');
gettext('Ejercicio-25-2');
gettext('El funcionamiento se muestra en este [video de youtube](https://www.youtube.com/watch?v=Ient0K6_2YY)');
gettext('[![Click to see the youtube video](http://img.youtube.com/vi/Ient0K6_2YY/0.jpg)](https://www.youtube.com/watch?v=Ient0K6_2YY)');
gettext('**Ejercicio 25.3:** (10 Bitpoints). Juego: ¡Primero en pulsar!\n\nDiseñar un circuito para jugar al juego de **primero en pulsar**, en el que **gana** el jugador que aprieta  \nantes el pulsador. Hay **dos jugadores**. Cada uno tiene **un pulsador** y un **LED externos**. Cuando el **árbitro** termine de  \nformular una pregunta, el jugador que apriete el pulsador antes ganará, y podrá reponderla. Para ello,  \nel circuito debe **encender el LED del jugador que primero aprieta el pulsador**, y cuando esto ocurre,  \n**anular el pulsador del otro jugador**. Para apagar el LED del ganador, se aprieta el **pulsador SW1**. Hay un **tercer LED** que  \n**parpadea a 1Hz**, indicando que el circuito está **esperando** a los jugadores aprieten sus pulsadores');
gettext('**Consejo**: Usar 2 biestables, uno para cada jugador. Cada biestable se pondrá a 1 cuando ocurran  \n3 eventos: pulsador apretado, pulsador del otro jugador NO apretado, y biestable del otro  \njugador está a 0. Usar puertas and de 3 entradas');
