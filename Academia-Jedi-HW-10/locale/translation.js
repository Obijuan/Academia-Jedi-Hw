// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Bits');
gettext('Puertas');
gettext('Varios');
gettext('0');
gettext('Un bit constante a 0');
gettext('1');
gettext('Un bit constante a 1');
gettext('not');
gettext('Puerta NOT');
gettext('Bombeo');
gettext('Retardo');
gettext('Servos');
gettext('Corazon_10Hz');
gettext('Bombear 1 bit por segundo');
gettext('Corazon_1Hz');
gettext('Corazon_2Hz');
gettext('Corazon_3Hz');
gettext('Corazon_4Hz');
gettext('Corazon_5Hz');
gettext('Corazon_7Hz');
gettext('Tortuga-2');
gettext('Divisor entre dos');
gettext('Biestable T síncrono, inicializado a 0');
gettext('Biestable T síncrono, inicializado por parametro INI');
gettext('Biestable tipo D con entrada de enable, inicializado al parámetro INI');
gettext('Biestable D con inicialización paramétrica');
gettext('Multiplexor 2:1 de 1-bit');
gettext('Puerta OR');
gettext('NAND logic gate');
gettext('Transistor');
gettext('Transistor cmos hecho a partir de semiconductores');
gettext('Cristal de Siicio');
gettext('Atomos de silicio');
gettext('Puerta AND');
gettext('Generar un pulso de reloj al recibir un flanco por la entrada');
gettext('Biestable D inicializado a 0');
gettext('Delay flip-flop');
gettext('Tortuga: Divisor entre 2\n\nImplementado a partir de un\nbiestable T síncrono');
gettext('Hacer que solo responda a los flancos\nde subida de la señal de entrada');
gettext('Mux 2:1 with logic gates');
gettext('Entrada 1');
gettext('Entrada 0');
gettext('Selección');
gettext('Implementación en Verilog');
gettext('Las puertas están construidas a\npartir de transistores');
gettext('Pincha en algún transistor para\nbajar de nivel');
gettext('Nivel 3: Semiconductores');
gettext('Los transistores se crean a \npartir de uniones entre \nsemiconductores, de tipo P y N\nEstán integrados en los dados de\nsilicio en los circuitos integrados');
gettext('Pincha en el bloque para bajar de nivel');
gettext('Nivel 2: MATERIALES');
gettext('Cristal de silicio');
gettext('Los semiconductores se crean a partir de cristales\nde Silicio (Si) que se dopans con impurezas\npara darle las propiedades de semiconductores');
gettext('Pincha en los bloques para bajar de nivel');
gettext('Átomos de Silicio');
gettext('Nivel 1: ATOMOS');
gettext('Los cristales de silicio se forman a \npartir del enlace covalente entre los\nátomos de silicio. Cada uno de ellos \nestá rodeado por 4 átomos de silicio\nformando un tetraedro');
gettext('Emax-ES08A');
gettext('Futaba-3003');
gettext('TowerPro-SG90');
gettext('ServoBit-90');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('Valor constante para bus de 8 bits');
gettext('Mux 2:1. Bus de 7 bits. ');
gettext('Mux 2:1. Bus de 4 bits. ');
gettext('Agregador de 4 cables a bus de 4bits');
gettext('Separador de bus de 4bits en 4 cables (1 + 1 + 1 + 1)');
gettext('Separador de bus de 8bits en 2 (4 + 4)');
gettext('Agregador de 2 buses de 4 a bus de 8bits');
gettext('Controlador PWM para posicionar servos de 20ms. Las unidades de pos son de 10usec');
gettext('Posición 0');
gettext('Posición 1');
gettext('<B>Posicion del servo</B>\n\nSe especifica en unidades de 10micro-segundos\nEj. pos = 100 --> Pulso de achura 1ms');
gettext('<B>Generación de una señal PWM para posicionamiento de Servos</B>\nEl periodo es de 20ms\nEl ancho del pulso varía entre 0 - 255 (0 - 2.5ms)');
gettext('Servobit-90');
gettext('ServoBit para Futaba 3003. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('Servobit-90');
gettext('ServoBit para micrservo TowerPro-SG90. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('<B>Servobit</B> para microservos TowerPro SG-90 o compatibles\nLas dos posiciones están distanciadas 90 grados\n\n* Posicion 0: 45 grados\n* Posicion 1: 135 grados');
gettext('0-Soluciones-Tutorial-9');
gettext('1-Ejemplos');
gettext('2-Ejercicios');
gettext('Sol-9-1');
gettext('Sol-9-2');
gettext('Sol-9-3');
gettext('01-1-Servol-pulsador');
gettext('<B>Circuito para mover un microservo EMAX ES08A entre dos\nposiciones, con el pulsador SW1</B>');
gettext('01-2-Servol-pulsador-LED');
gettext('02-Servo-corazon');
gettext('<B>Movimiento automático</B> del servo, de una posición a otra,\na una frecuencia 1 vez por segundo\nAdicionalmente se muestra el corazón por los LEDs 0 y 7,\nmoviéndose alternativamente a la vez que el servo');
gettext('03-1-servo-tortuga');
gettext('<B>Movimiento automático</B> del servo, de una posición a otra.\nSe usa una tortuga para dividir la frecuencia (duplicar el \nperiodo). De esta forma, el servo está 1 segundo en cada posición\n\nLa señal de 1Hz del corazón se lleva directamente a los LEDs\npara apreciar cómo el cambia de posición más lentamente');
gettext('03-2-servo-tortuga');
gettext('<B>Movimiento automático</B> del servo, de una posición a otra.\nSe usan dos tortugas para dividir la frecuencia por 4 \n(multiplicar el periodo por 4). De esta forma, el servo está\n2 segundos en cada posición\n\nLa señal de 1Hz del corazón se lleva directamente a los LEDs\npara apreciar cómo el cambia de posición más lentamente');
gettext('04-1-Dos-servos-en-fase');
gettext('<B>Movimiento de dos servos iguales</B>, en fase\n\nSe usa la misma señal PWM del servoBit para ambos servos');
gettext('04-2-Dos-servos-dos-controladores-en-fase');
gettext('<B>Movimiento de dos servos iguales</B>, en fase\n\nSe usan dos controladores separados');
gettext('04-3-Dos-servos-posiciones-contrarias');
gettext('<B>Movimiento de dos servos</B>, en posiciones contrarias\nAl apretar el pulsador, los servos cambian de posición,\npero empieza en las posiciones diferentes');
gettext('04-4-Dos-servos-independientes');
gettext('<B>Movimiento de dos servos independientes</B>\nCada uno controlado con un pulsador');
gettext('servos-test');
gettext('Ejercicio-10-1');
gettext('<B>Ejercicio 10.1</B>: (5 Bitpoints) Poner la cabeza de Franky sobre un servo, que haga\nde cuello. Hacer un circuito digital que lo haga moverse lateralmente, para que mire a \nizquieda y derecha con un periodo total de 4 segundos (2 segundos en cada lado). Los dos \nojos de franky deben parpadear a una frecuencia de 4Hz\n\nVídeo Demo en acción: https://www.youtube.com/watch?v=dxh0fImkC4Q\n\n  ');
gettext('Entregar:\n\n  -1 Pantallazo del circuito (1 Bitpoint)\n  -1 Vídeo del funcionamiento (3 Bitpoint)\n  \n  Enviarlos por redes sociales (Twitter, G+) con mención \n  a @Obijuan_cube. El vídeo puede estar en youtube o directamente en el tuit/post');
gettext('GITHUB:\n\n  1 Bitpoint adicional si lo entregáis por Github (sólo pantallazo, el vídeo\n  no hace falta, para que no ocupe tanto espacio)');
gettext('Ejercicio-10-2');
gettext('<B>Ejercicio 10.2</B>: (3 Bitpoints) Hacer una barrera de acceso a un recinto, con un servo\ny cartón. Al apretar un pulsador se levanta, y al sortarlo se cierra\n\nVideo Demo: https://www.youtube.com/watch?v=74imZ80poBk');
gettext('Entregar:\n\n  -1 pantallazo del Circuito (1 Bitpoint)\n  -1 Vídeo del funcionamiento (1 Bitpoint)\n  \n  Enviarlos por redes sociales (Twitter, G+) con mención \n  a @Obijuan_cube. El vídeo puede estar en youtube o directamente en el tuit/post');
gettext('Ejercicio-10-3');
gettext('<B>Ejercicio 10.3</B>: (5 Bitpoints) Hacer un circuito digital para controlar dos servos con\ndos pulsadores, y montar un mini-pinball\n\nDemo: https://www.youtube.com/watch?v=vmIwpy2r_V8');
gettext('Entregar:\n\n  -1 pantallazo del circuito (1 Bitpoint)\n  -1 Vídeo del funcionamiento (3 Bitpoints)\n  \n  Enviarlos por redes sociales (Twitter, G+) con mención \n  a @Obijuan_cube. El vídeo puede estar en youtube o directamente en el tuit/post');
gettext('Ejercicio-10-4');
gettext('<B>Ejercicio 10.4</B>: (3 Bitpoints) Ejercicio Libre, para fomento de la creatividad \n');
gettext('Entregar:\n\n  Bien pantallazos, enlaces, vídeos, etc... por redes\n  sociales o github. Como se quiera');
