// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Bits');
gettext('Puertas');
gettext('Varios');
gettext('0');
gettext('Un bit constante a 0');
gettext('1');
gettext('Un bit constante a 1');
gettext('and');
gettext('Puerta AND');
gettext('not');
gettext('Puerta NOT');
gettext('Bombeo');
gettext('Mux');
gettext('Retardo');
gettext('Servos');
gettext('Corazon_10Hz');
gettext('Bombear 1 bit por segundo');
gettext('Corazon_1Hz');
gettext('Corazon_1KHz');
gettext('Corazon_2Hz');
gettext('Corazon_2KHz');
gettext('Corazon_3Hz');
gettext('Corazon_4Hz');
gettext('Corazon_5Hz');
gettext('Corazon_7Hz');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1');
gettext('Mux-2-1');
gettext('Mux-4-1-flip');
gettext('Multiplexor de 4 a 1. Implementado en verilog');
gettext('Mux-4-1');
gettext('Tortuga-2');
gettext('Divisor entre dos');
gettext('Biestable T síncrono, inicializado a 0');
gettext('Biestable T síncrono, inicializado por parametro INI');
gettext('Biestable tipo D con entrada de enable, inicializado al parámetro INI');
gettext('Biestable D con inicialización paramétrica');
gettext('Multiplexor 2:1 de 1-bit');
gettext('Puerta OR');
gettext('NAND logic gate');
gettext('Transistor');
gettext('Transistor cmos hecho a partir de semiconductores');
gettext('Cristal de Siicio');
gettext('Atomos de silicio');
gettext('Generar un pulso de reloj al recibir un flanco por la entrada');
gettext('Biestable D inicializado a 0');
gettext('Delay flip-flop');
gettext('Tortuga: Divisor entre 2\n\nImplementado a partir de un\nbiestable T síncrono');
gettext('Hacer que solo responda a los flancos\nde subida de la señal de entrada');
gettext('Mux 2:1 with logic gates');
gettext('Entrada 1');
gettext('Entrada 0');
gettext('Selección');
gettext('Implementación en Verilog');
gettext('Las puertas están construidas a\npartir de transistores');
gettext('Pincha en algún transistor para\nbajar de nivel');
gettext('Nivel 3: Semiconductores');
gettext('Los transistores se crean a \npartir de uniones entre \nsemiconductores, de tipo P y N\nEstán integrados en los dados de\nsilicio en los circuitos integrados');
gettext('Pincha en el bloque para bajar de nivel');
gettext('Nivel 2: MATERIALES');
gettext('Cristal de silicio');
gettext('Los semiconductores se crean a partir de cristales\nde Silicio (Si) que se dopans con impurezas\npara darle las propiedades de semiconductores');
gettext('Pincha en los bloques para bajar de nivel');
gettext('Átomos de Silicio');
gettext('Nivel 1: ATOMOS');
gettext('Los cristales de silicio se forman a \npartir del enlace covalente entre los\nátomos de silicio. Cada uno de ellos \nestá rodeado por 4 átomos de silicio\nformando un tetraedro');
gettext('Emax-ES08A');
gettext('Futaba-3003');
gettext('TowerPro-SG90');
gettext('ServoBit-90');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('Valor constante para bus de 8 bits');
gettext('Mux 2:1. Bus de 7 bits. ');
gettext('Mux 2:1. Bus de 4 bits. ');
gettext('Agregador de 4 cables a bus de 4bits');
gettext('Separador de bus de 4bits en 4 cables (1 + 1 + 1 + 1)');
gettext('Separador de bus de 8bits en 2 (4 + 4)');
gettext('Agregador de 2 buses de 4 a bus de 8bits');
gettext('Controlador PWM para posicionar servos de 20ms. Las unidades de pos son de 10usec');
gettext('Posición 0');
gettext('Posición 1');
gettext('<B>Posicion del servo</B>\n\nSe especifica en unidades de 10micro-segundos\nEj. pos = 100 --> Pulso de achura 1ms');
gettext('<B>Generación de una señal PWM para posicionamiento de Servos</B>\nEl periodo es de 20ms\nEl ancho del pulso varía entre 0 - 255 (0 - 2.5ms)');
gettext('Servobit-90');
gettext('ServoBit para Futaba 3003. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('Servobit-90');
gettext('ServoBit para micrservo TowerPro-SG90. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('<B>Servobit</B> para microservos TowerPro SG-90 o compatibles\nLas dos posiciones están distanciadas 90 grados\n\n* Posicion 0: 45 grados\n* Posicion 1: 135 grados');
gettext('0-Soluciones-Tutorial-13');
gettext('1-Ejemplos');
gettext('2-Ejercicios');
gettext('Sol-13-1');
gettext('**Movimiento del cuello de Franky**');
gettext('**Sonido de los rayos láser**');
gettext('**Ráfagas luminosas de los rayos láser**');
gettext('Pulsador activación rayos láser');
gettext('Sol-13-2');
gettext('**Generación de señal cuadrada de 8 segundos\nde periodo**');
gettext('**La barrera está 4 seg. arriba y 4 abajo**');
gettext('4 puertass AND de habilitacion de la salida\nCuando barrerá está bajada (0) se activan las\nsalidas hacia los zumbadores y LEDs externos');
gettext('**Sirena Luminosa**');
gettext('**Sirena Acústica**');
gettext('Tanto la sirena luminosa como la acústica\ncambian a la frec. de 2Hz');
gettext('Sol-13-3');
gettext('Bombear bits a la frecuencia del DO de la cuarta octava');
gettext('Bombear bits a la frecuencia del RE de la cuarta octava');
gettext('Bombear bits a la frecuencia del MI de la cuarta octava');
gettext('1-Sirena-luminosa');
gettext('# Sirena luminosa');
gettext('LEDs externos conectados a\nlos pines de 5v');
gettext('2-Tono-1Khz');
gettext('# Tono de 1Khz');
gettext('**Ejemplo 2**: Zumbador');
gettext('3-Timbre');
gettext('# Timbre');
gettext('**Ejemplo 3**: Tiembre: Emitir un pitido de 1Khz\ncada vez que se apriete el pulsador (y encender un LED)');
gettext('4-sirena');
gettext('**Ejemplo 4**: Sirena acústica y luminosa. Se emiten dos\ntonos alternativamente, en dos zumbadores. Cuando\nuno está emitiendo, el otro está apagado');
gettext('# Sirena');
gettext('**Tono bajo**');
gettext('**Tono alto**');
gettext('Tiempo que están activos cada\nuno de los tonos');
